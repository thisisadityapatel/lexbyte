/* Generated By:JavaCC: Do not edit this line. VNMConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface VNMConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int COMMENT = 5;
  /** RegularExpression Id. */
  int LESS = 6;
  /** RegularExpression Id. */
  int LE = 7;
  /** RegularExpression Id. */
  int GREAT = 8;
  /** RegularExpression Id. */
  int GE = 9;
  /** RegularExpression Id. */
  int EQ = 10;
  /** RegularExpression Id. */
  int NEQ = 11;
  /** RegularExpression Id. */
  int IN = 12;
  /** RegularExpression Id. */
  int NOTIN = 13;
  /** RegularExpression Id. */
  int PLUS = 14;
  /** RegularExpression Id. */
  int MINUS = 15;
  /** RegularExpression Id. */
  int PROD = 16;
  /** RegularExpression Id. */
  int DIV = 17;
  /** RegularExpression Id. */
  int AND = 18;
  /** RegularExpression Id. */
  int OR = 19;
  /** RegularExpression Id. */
  int NOT = 20;
  /** RegularExpression Id. */
  int ASSGN = 21;
  /** RegularExpression Id. */
  int LRND = 22;
  /** RegularExpression Id. */
  int RRND = 23;
  /** RegularExpression Id. */
  int LSQU = 24;
  /** RegularExpression Id. */
  int RSQU = 25;
  /** RegularExpression Id. */
  int COMMA = 26;
  /** RegularExpression Id. */
  int SCOL = 27;
  /** RegularExpression Id. */
  int TRUE = 28;
  /** RegularExpression Id. */
  int FALSE = 29;
  /** RegularExpression Id. */
  int RANGE = 30;
  /** RegularExpression Id. */
  int DO = 31;
  /** RegularExpression Id. */
  int WHILE = 32;
  /** RegularExpression Id. */
  int FOR = 33;
  /** RegularExpression Id. */
  int IF = 34;
  /** RegularExpression Id. */
  int THEN = 35;
  /** RegularExpression Id. */
  int ELIF = 36;
  /** RegularExpression Id. */
  int ELSE = 37;
  /** RegularExpression Id. */
  int FI = 38;
  /** RegularExpression Id. */
  int FUNCTION = 39;
  /** RegularExpression Id. */
  int RETURN = 40;
  /** RegularExpression Id. */
  int END = 41;
  /** RegularExpression Id. */
  int PRINT = 42;
  /** RegularExpression Id. */
  int PRINTLN = 43;
  /** RegularExpression Id. */
  int VAR = 44;
  /** RegularExpression Id. */
  int DIGIT = 45;
  /** RegularExpression Id. */
  int LETTER = 46;
  /** RegularExpression Id. */
  int ALPHANUMERIC = 47;
  /** RegularExpression Id. */
  int NUMBER = 48;
  /** RegularExpression Id. */
  int IDNUM = 49;
  /** RegularExpression Id. */
  int IDBOOL = 50;
  /** RegularExpression Id. */
  int IDVEC = 51;
  /** RegularExpression Id. */
  int IDMAT = 52;
  /** RegularExpression Id. */
  int STRING = 53;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<COMMENT>",
    "\"<\"",
    "\"<=\"",
    "\">\"",
    "\">=\"",
    "\"==\"",
    "\"!=\"",
    "\"=in\"",
    "\"!in\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"&\"",
    "\"|\"",
    "\"!\"",
    "\":=\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\",\"",
    "\";\"",
    "\"#1\"",
    "\"#0\"",
    "\"..\"",
    "\"DO\"",
    "\"WHILE\"",
    "\"FOR\"",
    "\"IF\"",
    "\"THEN\"",
    "\"ELIF\"",
    "\"ELSE\"",
    "\"FI\"",
    "\"FUNCTION\"",
    "\"RETURN\"",
    "\"END\"",
    "\"PRINT\"",
    "\"PRINTLN\"",
    "\"VAR\"",
    "<DIGIT>",
    "<LETTER>",
    "<ALPHANUMERIC>",
    "<NUMBER>",
    "<IDNUM>",
    "<IDBOOL>",
    "<IDVEC>",
    "<IDMAT>",
    "<STRING>",
  };

}
