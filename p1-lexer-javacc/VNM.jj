options 
{
  // Nothing to do here for Part #1
  IGNORE_CASE=false;
}

PARSER_BEGIN(VNM)
public class VNM 
{
  // Nothing to do here for Part #1
}
PARSER_END(VNM)

TOKEN_MGR_DECLS : 
{
  // Nothing to do here for Part #1
}

// Characters/strings to be skipped 
// (they don't contribute to a token)
SKIP : 
{
  " "     
| "\t"    
| "\n"    
| "\r" 
}


// Special tokens are saved, but not sent to the parser
// Comments go here since they need to be removed but not skipped
SPECIAL_TOKEN:
{
  < COMMENT: "//" (~["\n","\r"])* ("\n"|"\r"|"\r\n")? >
}


// Tokens where case matters can be defined here
TOKEN : 
{
  < LESS: "<"   >
| < LE: "<=" >
| < GREAT: ">" >
| < GE: ">=" >
| < EQ: "==" >
| < NEQ: "!=" >
| < IN: "=in" >
| < NOTIN: "!in" >

  // Arithematic
| < PLUS: "+" >
| < MINUS: "-" >
| < PROD: "*" >
| < DIV: "/" >

  // Logical
| < AND: "&" >
| < OR: "|" >
| < NOT: "!" >

  // Assignment
| < ASSGN: ":=" >

  // Delimiters
| < LRND: "(" >
| < RRND: ")" >
| < LSQU: "[" >
| < RSQU: "]" >
| < COMMA: "," >
| < SCOL: ";" >

  // Boolean literals
| < TRUE: "#1" >
| < FALSE: "#0" >

  // Range operator
| < RANGE: ".." >
}

// Tokens where case doesn't matter can be defined here
TOKEN [IGNORE_CASE]:
{
  < DO:"DO">
| < WHILE:"WHILE">
| < FOR: "FOR">
| < IF: "IF">
| < THEN: "THEN">
| < ELIF: "ELIF">
| < ELSE: "ELSE">
| < FI: "FI">
| < FUNCTION: "FUNCTION">
| < RETURN: "RETURN">
| < END: "END">
| < PRINT: "PRINT">
| < PRINTLN: "PRINTLN">
| < VAR: "VAR">
}

TOKEN : 
{
 // Using regular expressions to define a number token
 // You can do similar for identifiers and strings

  < #DIGIT:	["0"-"9"]>
| < #LETTER: ["a"-"z","A"-"Z"] >
| < #ALPHANUMERIC: (<LETTER>|<DIGIT>) >

 // Number Token
| < NUMBER:	(<DIGIT>)+ >  // A number is 1 or more digits

 // Identifier tokens
| < IDNUM: "#" <LETTER> (<ALPHANUMERIC>)* >
| < IDBOOL: "?" <LETTER> (<ALPHANUMERIC>)* >
| < IDVEC: "v_" (<ALPHANUMERIC>)+ >
| < IDMAT: "M_" (<ALPHANUMERIC>)+ >

 // String token - handles escape sequences
| < STRING: "\"" (~["\"","\\","\n","\r"] | "\\" (~[]))* "\"" >
}


// Special tokens are saved, but not sent to the parser
// Hint: Perhaps comments should go here...?
// Remove the comments below when you're ready
//SPECIAL_TOKEN : 
//{
  
//}
   
   
   
   
